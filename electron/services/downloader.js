import l from"node:fs";import R from"node:path";import v from"node:crypto";import{pipeline as U}from"node:stream";import{promisify as b}from"node:util";import q from"node:https";var B=b(U);function P(s){return new Promise((t,i)=>{let r=v.createHash("sha256"),h=l.createReadStream(s);h.on("error",i),h.on("end",()=>t(r.digest("hex"))),h.on("data",o=>r.update(o))})}function D(s){l.mkdirSync(s,{recursive:!0})}function W(s){return new Promise((t,i)=>{q.get(s,r=>{if(r.statusCode!==200){i(new Error(`HTTP ${r.statusCode} for ${s}`)),r.resume();return}let h="";r.setEncoding("utf8"),r.on("data",o=>h+=o),r.on("end",()=>{try{t(JSON.parse(h))}catch(o){i(o)}})}).on("error",i)})}function T(s){return new Promise(t=>setTimeout(t,s))}function F(){return{cancelled:!1,requests:new Set}}function O(s){if(s){s.cancelled=!0;for(let t of s.requests)try{t.destroy(new Error("cancelled"))}catch{}s.requests.clear()}}var _=new Set(["ECONNRESET","ETIMEDOUT","EAI_AGAIN","ECONNABORTED","ENETRESET","EHOSTUNREACH","ENETUNREACH","EPIPE"]);async function $(s,t,i,r=1,h,o=0,p=0){return new Promise((k,f)=>{D(R.dirname(t));let y=l.createWriteStream(t,{flags:o>0?"a":"w"});if(h?.cancelled)return y.close(()=>{}),f(new Error("cancelled"));let E={};o>0&&(E.headers={Range:`bytes=${o}-`});let d=q.get(s,E,c=>{if(c.statusCode!==200&&!(o>0&&c.statusCode===206)){if(y.close(()=>{}),o>0&&c.statusCode===200){try{l.unlinkSync(t)}catch{}let a=Math.min(2e3*r,1e4);return c.resume(),T(a).then(()=>k($(s,t,i,r+1,h,0,p)))}if(l.unlink(t,()=>{}),c.statusCode&&[429,500,502,503,504].includes(c.statusCode)&&r<5){let a=Math.min(2e3*r,1e4);return c.resume(),T(a).then(()=>k($(s,t,i,r+1,h,o,p)))}f(new Error(`HTTP ${c.statusCode} for ${s}`)),c.resume();return}let w=Number(c.headers["content-length"]||0),g=p>0?p:o>0?o+w:w,e=0,n=Date.now(),u=setInterval(()=>{if(!h?.cancelled&&Date.now()-n>15e3)try{let a=new Error("stalled");a.code="ETIMEDOUT",d.destroy(a)}catch{}},5e3);c.on("data",a=>{e+=a.length,n=Date.now(),i&&i(Math.min(o+e,g||o+e),g||0)}),c.on("aborted",()=>{y.close(()=>{});try{clearInterval(u)}catch{}if(r<5){let a=Math.min(2e3*r,1e4);return T(a).then(()=>k($(s,t,i,r+1,h,o+e,p)))}f(new Error("response aborted"))}),B(c,y).then(()=>{try{clearInterval(u)}catch{}k()}).catch(a=>{try{clearInterval(u)}catch{}f(a)})});if(h?.requests.add(d),d.on("close",()=>h?.requests.delete(d)),d.setTimeout(45e3,()=>{try{let c=new Error("Request timeout");c.code="ETIMEDOUT",d.destroy(c)}catch{}}),h?.cancelled)try{d.destroy(new Error("cancelled"))}catch{}d.on("error",c=>{let w=c?.code,g=r<5&&w&&_.has(String(w));try{y.close(()=>{})}catch{}if(g){let e=Math.min(2e3*r,1e4),n=o;try{n=l.statSync(t).size}catch{}return T(e).then(()=>k($(s,t,i,r+1,h,n,p)))}f(c)})})}async function G(s,t,i){try{let r=l.statSync(s);return i&&Number(i)>0&&r.size!==Number(i)?!1:(await P(s)).toLowerCase()===String(t).toLowerCase()}catch{return!1}}async function j(s){let t=`${s.replace(/\/$/,"")}/checksums.json`;return W(t)}async function J(s,t,i,r,h=4,o){let p=R.join(i,t.path.replace(/\\/g,R.sep));if(D(R.dirname(p)),await G(p,t.checksum,t.size)){r("progress:skip",{path:t.path});return}if(o?.cancelled)throw new Error("cancelled");if(Array.isArray(t.parts)&&t.parts.length>0){let f=t.parts.length,y=new Array(f),E=0,d=new Set;async function c(){for(;;){let e=E++;if(e>=f)return;if(d.has(e))continue;d.add(e);let n=t.parts[e],u=`${s.replace(/\/$/,"")}/${n.path.replace(/\\/g,"/")}`,a=`${p}.part${e}`;try{if(l.existsSync(a))if((await P(a)).toLowerCase()===String(n.checksum).toLowerCase()){r("progress:part",{path:t.path,part:e,totalParts:f,received:Number(n.size||0),total:Number(n.size||0)}),y[e]=a;continue}else try{l.unlinkSync(a)}catch{}}catch{}let m=0;for(;;){if(o?.cancelled)throw new Error("cancelled");m+=1;let S=0,L=0;try{let N=0;try{N=l.statSync(a).size}catch{}let C=Number(n.size||0);if(C>0&&N>C)try{l.unlinkSync(a),N=0}catch{}await $(u,a,(A,z)=>{let x=Math.max(0,A-L);L=A;try{x>0&&r("progress:bytes",{delta:x})}catch{}S+=x;let H=C||z||0;r("progress:part",{path:t.path,part:e,totalParts:f,received:Math.min(A,H||A),total:H})},1,o,N,C)}catch{try{l.unlinkSync(a)}catch{}try{S>0&&r("progress:bytes",{delta:-S})}catch{}try{r("progress:part:reset",{path:t.path,part:e,totalParts:f})}catch{}let C=Math.min(2e3*m,1e4);await T(C);continue}if((await P(a)).toLowerCase()===String(n.checksum).toLowerCase())break;try{l.unlinkSync(a)}catch{}try{S>0&&r("progress:bytes",{delta:-S})}catch{}try{r("progress:part:reset",{path:t.path,part:e,totalParts:f})}catch{}let M=Math.min(2e3*m,1e4);await T(M)}y[e]=a}}let w=Array.from({length:Math.max(1,h)},()=>c());await Promise.all(w),r("progress:merge:start",{path:t.path,parts:y.length});let g=l.createWriteStream(p);for(let e=0;e<y.length;e++){let n=y[e];r("progress:merge:part",{path:t.path,part:e,totalParts:y.length}),await new Promise((u,a)=>{let m=l.createReadStream(n);m.on("error",a),g.on("error",a),m.on("end",()=>{try{l.unlinkSync(n)}catch{}u()}),m.pipe(g,{end:!1})})}await new Promise((e,n)=>{g.on("error",n),g.on("finish",e),g.end()});try{r("progress:merge:done",{path:t.path})}catch{}}else{let f=`${s.replace(/\/$/,"")}/${t.path.replace(/\\/g,"/")}`,y=0;for(;;){y+=1;let E=0,d=0,c=0;try{c=l.statSync(p).size}catch{}let w=Number(t.size||0);if(w>0&&c>w)try{l.unlinkSync(p),c=0}catch{}if(await $(f,p,(e,n)=>{let u=Math.max(0,e-d);d=e;try{u>0&&r("progress:bytes",{delta:u})}catch{}E+=u;let a=w||n||0;r("progress:file",{path:t.path,received:Math.min(e,a||e),total:a})},1,o,c,w),(await P(p)).toLowerCase()===String(t.checksum).toLowerCase())break;try{l.unlinkSync(p)}catch{}try{E>0&&r("progress:bytes",{delta:-E})}catch{}if(y>=2)throw new Error(`Checksum mismatch for ${t.path}`)}}if(r("progress:verify",{path:t.path}),(await P(p)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`)}async function tt(s,t,i,r,h=!1,o=4,p=4,k){let f=(t.files||[]).filter(n=>h||!n.optional),y=f.filter(n=>!(Array.isArray(n.parts)&&n.parts.length>0)),E=f.filter(n=>Array.isArray(n.parts)&&n.parts.length>0),d=y.concat(E),c=d.length,w=0,g=d.reduce((n,u)=>{let a=Number(u.size||0);return a>0?n+a:Array.isArray(u.parts)&&u.parts.length?n+u.parts.reduce((m,S)=>m+Number(S.size||0),0):n},0);try{r("progress:bytes:total",{totalBytes:g})}catch{}async function e(n,u,a){let m=0;async function S(){for(;;){let I=m++;if(I>=n.length)return;let M=n[I],N=u+I;r("progress:start",{index:N,total:c,path:M.path,completed:w});let C=async()=>J(s,M,i,r,p,k);try{await C()}catch(A){if(String(A?.message||A||"error").includes("cancelled"))throw A;try{let x=R.join(i,M.path.replace(/\\/g,R.sep));try{l.unlinkSync(x)}catch{}await C()}catch(x){try{r("progress:error",{path:M.path,message:String(x?.message||x)})}catch{}}}w+=1,r("progress:done",{index:N,total:c,path:M.path,completed:w})}}let L=Array.from({length:Math.max(1,a)},()=>S());await Promise.all(L)}await e(y,0,Math.max(1,o)),await e(E,y.length,1)}export{O as cancelToken,F as createCancelToken,tt as downloadAll,J as downloadFileObject,j as fetchChecksums};
