import u from"node:fs";import L from"node:path";import G from"node:crypto";import{pipeline as K}from"node:stream";import{promisify as V}from"node:util";import b from"node:https";var Y=V(K);function U(r){return String(r||"").replace(/\\/g,"/").replace(/^\/+/,"")}function W(r){return String(r||"").replace(/\\/g,"/").toLowerCase()}var D=new Map,J=new b.Agent({keepAlive:!0,maxSockets:64,maxFreeSockets:32,keepAliveMsecs:6e4,scheduling:"fifo"});function H(r){return new Promise((t,p)=>{let e=G.createHash("sha256"),h=u.createReadStream(r);h.on("error",p),h.on("end",()=>t(e.digest("hex"))),h.on("data",l=>e.update(l))})}function _(r){u.mkdirSync(r,{recursive:!0})}function Q(r){return new Promise((t,p)=>{let e=b.get(r,{agent:J},h=>{if(h.statusCode!==200){p(new Error(`HTTP ${h.statusCode} for ${r}`)),h.resume();return}let l="";h.setEncoding("utf8"),h.on("data",m=>l+=m),h.on("end",()=>{try{t(JSON.parse(l))}catch(m){p(m)}})});e.on("error",p),e.setTimeout(3e4,()=>{e.destroy(),p(new Error("JSON fetch timeout"))})})}function T(r){return new Promise(t=>setTimeout(t,r))}function nt(){return{cancelled:!1,requests:new Set}}function st(r){if(r){r.cancelled=!0;for(let t of r.requests)try{t.destroy(new Error("cancelled"))}catch{}r.requests.clear()}}var X=new Set(["ECONNRESET","ETIMEDOUT","EAI_AGAIN","ECONNABORTED","ENETRESET","EHOSTUNREACH","ENETUNREACH","EPIPE","ENOTFOUND","ECONNREFUSED","EHOSTDOWN","ENETDOWN"]);async function v(r,t,p,e=1,h,l=0,m=0){return new Promise((w,k)=>{_(L.dirname(t));let f=u.createWriteStream(t,{flags:l>0?"a":"w"});if(h?.cancelled)return f.close(()=>{}),k(new Error("cancelled"));let E={agent:J};l>0&&(E.headers={Range:`bytes=${l}-`});let d=b.get(r,E,a=>{if(a.statusCode!==200&&!(l>0&&a.statusCode===206)){if(f.close(()=>{}),l>0&&a.statusCode===200){try{u.unlinkSync(t)}catch{}let o=Math.min(2e3*e,1e4);a.resume();try{d.destroy(new Error("restart:range-ignored"))}catch{}return T(o).then(()=>w(v(r,t,p,e+1,h,0,m)))}if(u.unlink(t,()=>{}),a.statusCode&&[429,500,502,503,504].includes(a.statusCode)&&e<5){let o=Math.min(2e3*e,1e4);return a.resume(),T(o).then(()=>w(v(r,t,p,e+1,h,l,m)))}k(new Error(`HTTP ${a.statusCode} for ${r}`)),a.resume();return}let S=Number(a.headers["content-length"]||0),g=m>0?m:l>0?l+S:S,y=0,n=Date.now(),s=e<=2?3e4:45e3,i=setInterval(()=>{if(!h?.cancelled&&Date.now()-n>s)try{let o=new Error("stalled");o.code="ETIMEDOUT",d.destroy(o)}catch{}},1e4);a.on("data",o=>{y+=o.length,n=Date.now(),p&&p(Math.min(l+y,g||l+y),g||0)}),a.on("aborted",async()=>{let o=new Promise(c=>f.close(()=>c()));try{clearInterval(i)}catch{}try{await o}catch{}if(e<5){let c=Math.min(2e3*e,1e4);return T(c).then(()=>w(v(r,t,p,e+1,h,l+y,m)))}k(new Error("response aborted"))}),Y(a,f).then(()=>{try{clearInterval(i)}catch{}w()}).catch(o=>{try{clearInterval(i)}catch{}k(o)})});if(h?.requests.add(d),d.on("socket",a=>{try{a.setKeepAlive(!0,6e4),a.setNoDelay(!0),a.setRecvBufferSize&&a.setRecvBufferSize(64*1024),a.setSendBufferSize&&a.setSendBufferSize(64*1024)}catch{}}),d.on("close",()=>h?.requests.delete(d)),d.setTimeout(9e4,()=>{try{let a=new Error("Request timeout");a.code="ETIMEDOUT",d.destroy(a)}catch{}}),h?.cancelled)try{d.destroy(new Error("cancelled"))}catch{}d.on("error",async a=>{let S=a?.code,g=e<8&&S&&X.has(String(S)),y=new Promise(n=>{try{f.close(()=>n())}catch{n()}});try{await y}catch{}if(g){let n=Math.min(1e3*Math.pow(1.5,e),15e3),s=Math.random()*1e3,i=n+s,o=l;try{o=u.statSync(t).size}catch{}return T(i).then(()=>w(v(r,t,p,e+1,h,o,m)))}k(a)})})}async function Z(r,t,p){try{let e=u.statSync(r);return p&&Number(p)>0&&e.size!==Number(p)?!1:(await H(r)).toLowerCase()===String(t).toLowerCase()}catch{return!1}}async function ct(r){let t=`${r.replace(/\/$/,"")}/checksums.json`;return Q(t)}async function F(r,t,p,e,h=4,l){let m=U(t.path).split("/").join(L.sep),w=L.join(p,m);if(_(L.dirname(w)),await Z(w,t.checksum,t.size)){e("progress:skip",{path:t.path});return}if(l?.cancelled)throw new Error("cancelled");if(Array.isArray(t.parts)&&t.parts.length>0){let f=t.parts.length,E=new Array(f),d=0,a=new Set;async function S(){for(;;){let n=d++;if(n>=f)return;if(a.has(n))continue;a.add(n);let s=t.parts[n],i=U(s.path),o=`${r.replace(/\/$/,"")}/${i}`,c=`${w}.part${n}`;try{if(u.existsSync(c))if((await H(c)).toLowerCase()===String(s.checksum).toLowerCase()){e("progress:part",{path:t.path,part:n,totalParts:f,received:Number(s.size||0),total:Number(s.size||0)}),E[n]=c;continue}else try{u.unlinkSync(c)}catch{}}catch{}let C=0;for(;;){if(l?.cancelled)throw new Error("cancelled");C+=1;let M=0,$=0;try{let N=0;try{N=u.statSync(c).size}catch{}let A=Number(s.size||0);if(A>0&&N>A)try{u.unlinkSync(c),N=0}catch{}await v(o,c,(R,z)=>{let P=Math.max(0,R-$);$=R;try{P>0&&e("progress:bytes",{delta:P})}catch{}M+=P;let B=A||z||0;e("progress:part",{path:t.path,part:n,totalParts:f,received:Math.min(R,B||R),total:B})},1,l,N,A)}catch{try{u.unlinkSync(c)}catch{}try{M>0&&e("progress:bytes",{delta:-M})}catch{}try{e("progress:part:reset",{path:t.path,part:n,totalParts:f})}catch{}let A=Math.min(2e3*C,1e4);await T(A);continue}if((await H(c)).toLowerCase()===String(s.checksum).toLowerCase())break;try{u.unlinkSync(c)}catch{}try{M>0&&e("progress:bytes",{delta:-M})}catch{}try{e("progress:part:reset",{path:t.path,part:n,totalParts:f})}catch{}let I=Math.min(2e3*C,1e4);await T(I)}E[n]=c}}let g=Array.from({length:Math.max(1,h)},()=>S());await Promise.all(g),e("progress:merge:start",{path:t.path,parts:E.length});let y=u.createWriteStream(w);for(let n=0;n<E.length;n++){let s=E[n];e("progress:merge:part",{path:t.path,part:n,totalParts:E.length}),await new Promise((i,o)=>{let c=u.createReadStream(s);c.on("error",o),y.on("error",o),c.on("end",()=>{try{u.unlinkSync(s)}catch{}i()}),c.pipe(y,{end:!1})})}await new Promise((n,s)=>{y.on("error",s),y.on("finish",n),y.end()});try{e("progress:merge:done",{path:t.path})}catch{}}else{let f=U(t.path),E=`${r.replace(/\/$/,"")}/${f}`,d=0;for(;;){d+=1;let a=0,S=0,g=`${w}.download`,y=0;try{y=u.statSync(g).size}catch{}let n=Number(t.size||0);if(n>0&&y>n)try{u.unlinkSync(g),y=0}catch{}if(await v(E,g,(i,o)=>{let c=Math.max(0,i-S);S=i;try{c>0&&e("progress:bytes",{delta:c})}catch{}a+=c;let C=n||o||0;e("progress:file",{path:t.path,received:Math.min(i,C||i),total:C})},1,l,y,n),(await H(g)).toLowerCase()===String(t.checksum).toLowerCase())break;try{u.unlinkSync(g)}catch{}try{a>0&&e("progress:bytes",{delta:-a})}catch{}if(d>=2)throw new Error(`Checksum mismatch for ${t.path}`)}try{u.unlinkSync(w)}catch{}u.renameSync(`${w}.download`,w)}if(e("progress:verify",{path:t.path}),(await H(w)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`)}async function ot(r,t,p,e,h=!1,l=4,m=4,w){let k=new Set,f=[];for(let s of t.files||[]){if(!(h||!s.optional))continue;let i=W(s.path);i&&(k.has(i)||(k.add(i),f.push(s)))}let E=f.filter(s=>!(Array.isArray(s.parts)&&s.parts.length>0)),d=f.filter(s=>Array.isArray(s.parts)&&s.parts.length>0),a=E.concat(d),S=a.length,g=0,y=a.reduce((s,i)=>{let o=Number(i.size||0);return o>0?s+o:Array.isArray(i.parts)&&i.parts.length?s+i.parts.reduce((c,C)=>c+Number(C.size||0),0):s},0);try{e("progress:bytes:total",{totalBytes:y})}catch{}async function n(s,i,o){let c=0;async function C(){for(;;){let $=c++;if($>=s.length)return;let x=s[$],I=i+$,N=W(x.path),A=async()=>F(r,x,p,e,m,w),R=!1,z=D.get(N);z?R=!0:(e("progress:start",{index:I,total:S,path:x.path,completed:g}),z=(async()=>{try{await A()}catch(P){if(String(P?.message||P||"error").includes("cancelled"))throw P;try{let q=L.join(p,x.path.replace(/\\/g,L.sep));try{u.unlinkSync(q)}catch{}await A()}catch(q){try{e("progress:error",{path:x.path,message:String(q?.message||q)})}catch{}}}})(),D.set(N,z));try{await z}finally{R||D.delete(N)}g+=1,e("progress:done",{index:I,total:S,path:x.path,completed:g}),await T(10)}}let M=Array.from({length:Math.max(1,o)},()=>C());await Promise.all(M)}if(await n(E,0,Math.max(1,l)),D.size>0)try{await Promise.all([...D.values()])}catch{}await n(d,E.length,1)}export{st as cancelToken,nt as createCancelToken,ot as downloadAll,F as downloadFileObject,ct as fetchChecksums};
