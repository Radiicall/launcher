import l from"node:fs";import R from"node:path";import W from"node:crypto";import{pipeline as _}from"node:stream";import{promisify as G}from"node:util";import D from"node:https";var J=G(_);function b(n){return String(n||"").replace(/\\/g,"/").toLowerCase()}var v=new Map,K=new D.Agent({keepAlive:!0,maxSockets:32,maxFreeSockets:16,keepAliveMsecs:3e4});function z(n){return new Promise((t,p)=>{let e=W.createHash("sha256"),y=l.createReadStream(n);y.on("error",p),y.on("end",()=>t(e.digest("hex"))),y.on("data",h=>e.update(h))})}function B(n){l.mkdirSync(n,{recursive:!0})}function V(n){return new Promise((t,p)=>{D.get(n,e=>{if(e.statusCode!==200){p(new Error(`HTTP ${e.statusCode} for ${n}`)),e.resume();return}let y="";e.setEncoding("utf8"),e.on("data",h=>y+=h),e.on("end",()=>{try{t(JSON.parse(y))}catch(h){p(h)}})}).on("error",p)})}function N(n){return new Promise(t=>setTimeout(t,n))}function rt(){return{cancelled:!1,requests:new Set}}function nt(n){if(n){n.cancelled=!0;for(let t of n.requests)try{t.destroy(new Error("cancelled"))}catch{}n.requests.clear()}}var Y=new Set(["ECONNRESET","ETIMEDOUT","EAI_AGAIN","ECONNABORTED","ENETRESET","EHOSTUNREACH","ENETUNREACH","EPIPE"]);async function T(n,t,p,e=1,y,h=0,w=0){return new Promise((x,g)=>{B(R.dirname(t));let u=l.createWriteStream(t,{flags:h>0?"a":"w"});if(y?.cancelled)return u.close(()=>{}),g(new Error("cancelled"));let S={agent:K};h>0&&(S.headers={Range:`bytes=${h}-`});let f=D.get(n,S,r=>{if(r.statusCode!==200&&!(h>0&&r.statusCode===206)){if(u.close(()=>{}),h>0&&r.statusCode===200){try{l.unlinkSync(t)}catch{}let o=Math.min(2e3*e,1e4);r.resume();try{f.destroy(new Error("restart:range-ignored"))}catch{}return N(o).then(()=>x(T(n,t,p,e+1,y,0,w)))}if(l.unlink(t,()=>{}),r.statusCode&&[429,500,502,503,504].includes(r.statusCode)&&e<5){let o=Math.min(2e3*e,1e4);return r.resume(),N(o).then(()=>x(T(n,t,p,e+1,y,h,w)))}g(new Error(`HTTP ${r.statusCode} for ${n}`)),r.resume();return}let m=Number(r.headers["content-length"]||0),d=w>0?w:h>0?h+m:m,s=0,c=Date.now(),i=e<=2?6e4:9e4,a=setInterval(()=>{if(!y?.cancelled&&Date.now()-c>i)try{let o=new Error("stalled");o.code="ETIMEDOUT",f.destroy(o)}catch{}},1e4);r.on("data",o=>{s+=o.length,c=Date.now(),p&&p(Math.min(h+s,d||h+s),d||0)}),r.on("aborted",async()=>{let o=new Promise(E=>u.close(()=>E()));try{clearInterval(a)}catch{}try{await o}catch{}if(e<5){let E=Math.min(2e3*e,1e4);return N(E).then(()=>x(T(n,t,p,e+1,y,h+s,w)))}g(new Error("response aborted"))}),J(r,u).then(()=>{try{clearInterval(a)}catch{}x()}).catch(o=>{try{clearInterval(a)}catch{}g(o)})});if(y?.requests.add(f),f.on("socket",r=>{try{r.setKeepAlive(!0,6e4),r.setNoDelay(!0)}catch{}}),f.on("close",()=>y?.requests.delete(f)),f.setTimeout(45e3,()=>{try{let r=new Error("Request timeout");r.code="ETIMEDOUT",f.destroy(r)}catch{}}),y?.cancelled)try{f.destroy(new Error("cancelled"))}catch{}f.on("error",async r=>{let m=r?.code,d=e<5&&m&&Y.has(String(m)),s=new Promise(c=>{try{u.close(()=>c())}catch{c()}});try{await s}catch{}if(d){let c=Math.min(2e3*e,1e4),i=h;try{i=l.statSync(t).size}catch{}return N(c).then(()=>x(T(n,t,p,e+1,y,i,w)))}g(r)})})}async function Q(n,t,p){try{let e=l.statSync(n);return p&&Number(p)>0&&e.size!==Number(p)?!1:(await z(n)).toLowerCase()===String(t).toLowerCase()}catch{return!1}}async function st(n){let t=`${n.replace(/\/$/,"")}/checksums.json`;return V(t)}async function X(n,t,p,e,y=4,h){let w=R.join(p,t.path.replace(/\\/g,R.sep));if(B(R.dirname(w)),await Q(w,t.checksum,t.size)){e("progress:skip",{path:t.path});return}if(h?.cancelled)throw new Error("cancelled");if(Array.isArray(t.parts)&&t.parts.length>0){let g=t.parts.length,u=new Array(g),S=0,f=new Set;async function r(){for(;;){let s=S++;if(s>=g)return;if(f.has(s))continue;f.add(s);let c=t.parts[s],i=`${n.replace(/\/$/,"")}/${c.path.replace(/\\/g,"/")}`,a=`${w}.part${s}`;try{if(l.existsSync(a))if((await z(a)).toLowerCase()===String(c.checksum).toLowerCase()){e("progress:part",{path:t.path,part:s,totalParts:g,received:Number(c.size||0),total:Number(c.size||0)}),u[s]=a;continue}else try{l.unlinkSync(a)}catch{}}catch{}let o=0;for(;;){if(h?.cancelled)throw new Error("cancelled");o+=1;let E=0,P=0;try{let C=0;try{C=l.statSync(a).size}catch{}let k=Number(c.size||0);if(k>0&&C>k)try{l.unlinkSync(a),C=0}catch{}await T(i,a,(A,I)=>{let $=Math.max(0,A-P);P=A;try{$>0&&e("progress:bytes",{delta:$})}catch{}E+=$;let M=k||I||0;e("progress:part",{path:t.path,part:s,totalParts:g,received:Math.min(A,M||A),total:M})},1,h,C,k)}catch{try{l.unlinkSync(a)}catch{}try{E>0&&e("progress:bytes",{delta:-E})}catch{}try{e("progress:part:reset",{path:t.path,part:s,totalParts:g})}catch{}let k=Math.min(2e3*o,1e4);await N(k);continue}if((await z(a)).toLowerCase()===String(c.checksum).toLowerCase())break;try{l.unlinkSync(a)}catch{}try{E>0&&e("progress:bytes",{delta:-E})}catch{}try{e("progress:part:reset",{path:t.path,part:s,totalParts:g})}catch{}let L=Math.min(2e3*o,1e4);await N(L)}u[s]=a}}let m=Array.from({length:Math.max(1,y)},()=>r());await Promise.all(m),e("progress:merge:start",{path:t.path,parts:u.length});let d=l.createWriteStream(w);for(let s=0;s<u.length;s++){let c=u[s];e("progress:merge:part",{path:t.path,part:s,totalParts:u.length}),await new Promise((i,a)=>{let o=l.createReadStream(c);o.on("error",a),d.on("error",a),o.on("end",()=>{try{l.unlinkSync(c)}catch{}i()}),o.pipe(d,{end:!1})})}await new Promise((s,c)=>{d.on("error",c),d.on("finish",s),d.end()});try{e("progress:merge:done",{path:t.path})}catch{}}else{let g=`${n.replace(/\/$/,"")}/${t.path.replace(/\\/g,"/")}`,u=0;for(;;){u+=1;let S=0,f=0,r=`${w}.download`,m=0;try{m=l.statSync(r).size}catch{}let d=Number(t.size||0);if(d>0&&m>d)try{l.unlinkSync(r),m=0}catch{}if(await T(g,r,(c,i)=>{let a=Math.max(0,c-f);f=c;try{a>0&&e("progress:bytes",{delta:a})}catch{}S+=a;let o=d||i||0;e("progress:file",{path:t.path,received:Math.min(c,o||c),total:o})},1,h,m,d),(await z(r)).toLowerCase()===String(t.checksum).toLowerCase())break;try{l.unlinkSync(r)}catch{}try{S>0&&e("progress:bytes",{delta:-S})}catch{}if(u>=2)throw new Error(`Checksum mismatch for ${t.path}`)}try{l.unlinkSync(w)}catch{}l.renameSync(`${w}.download`,w)}if(e("progress:verify",{path:t.path}),(await z(w)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`)}async function ct(n,t,p,e,y=!1,h=4,w=4,x){let g=new Set,u=[];for(let i of t.files||[]){if(!(y||!i.optional))continue;let a=b(i.path);a&&(g.has(a)||(g.add(a),u.push(i)))}let S=u.filter(i=>!(Array.isArray(i.parts)&&i.parts.length>0)),f=u.filter(i=>Array.isArray(i.parts)&&i.parts.length>0),r=S.concat(f),m=r.length,d=0,s=r.reduce((i,a)=>{let o=Number(a.size||0);return o>0?i+o:Array.isArray(a.parts)&&a.parts.length?i+a.parts.reduce((E,P)=>E+Number(P.size||0),0):i},0);try{e("progress:bytes:total",{totalBytes:s})}catch{}async function c(i,a,o){let E=0;async function P(){for(;;){let L=E++;if(L>=i.length)return;let C=i[L],k=a+L,A=b(C.path),I=async()=>X(n,C,p,e,w,x),$=!1,M=v.get(A);M?$=!0:(e("progress:start",{index:k,total:m,path:C.path,completed:d}),M=(async()=>{try{await I()}catch(q){if(String(q?.message||q||"error").includes("cancelled"))throw q;try{let H=R.join(p,C.path.replace(/\\/g,R.sep));try{l.unlinkSync(H)}catch{}await I()}catch(H){try{e("progress:error",{path:C.path,message:String(H?.message||H)})}catch{}}}})(),v.set(A,M));try{await M}finally{$||v.delete(A)}d+=1,e("progress:done",{index:k,total:m,path:C.path,completed:d}),await N(10)}}let U=Array.from({length:Math.max(1,o)},()=>P());await Promise.all(U)}if(await c(S,0,Math.max(1,h)),v.size>0)try{await Promise.all([...v.values()])}catch{}await c(f,S.length,1)}export{nt as cancelToken,rt as createCancelToken,ct as downloadAll,X as downloadFileObject,st as fetchChecksums};
