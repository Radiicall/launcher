import l from"node:fs";import z from"node:path";import G from"node:crypto";import{pipeline as J}from"node:stream";import{promisify as K}from"node:util";import B from"node:https";var V=K(J);function b(a){return String(a||"").replace(/\\/g,"/").replace(/^\/+/,"")}function W(a){return String(a||"").replace(/\\/g,"/").toLowerCase()}var I=new Map,Y=new B.Agent({keepAlive:!0,maxSockets:32,maxFreeSockets:16,keepAliveMsecs:3e4});function H(a){return new Promise((t,p)=>{let e=G.createHash("sha256"),y=l.createReadStream(a);y.on("error",p),y.on("end",()=>t(e.digest("hex"))),y.on("data",o=>e.update(o))})}function _(a){l.mkdirSync(a,{recursive:!0})}function Q(a){return new Promise((t,p)=>{B.get(a,e=>{if(e.statusCode!==200){p(new Error(`HTTP ${e.statusCode} for ${a}`)),e.resume();return}let y="";e.setEncoding("utf8"),e.on("data",o=>y+=o),e.on("end",()=>{try{t(JSON.parse(y))}catch(o){p(o)}})}).on("error",p)})}function $(a){return new Promise(t=>setTimeout(t,a))}function nt(){return{cancelled:!1,requests:new Set}}function st(a){if(a){a.cancelled=!0;for(let t of a.requests)try{t.destroy(new Error("cancelled"))}catch{}a.requests.clear()}}var X=new Set(["ECONNRESET","ETIMEDOUT","EAI_AGAIN","ECONNABORTED","ENETRESET","EHOSTUNREACH","ENETUNREACH","EPIPE"]);async function v(a,t,p,e=1,y,o=0,S=0){return new Promise((w,k)=>{_(z.dirname(t));let f=l.createWriteStream(t,{flags:o>0?"a":"w"});if(y?.cancelled)return f.close(()=>{}),k(new Error("cancelled"));let m={agent:Y};o>0&&(m.headers={Range:`bytes=${o}-`});let d=B.get(a,m,s=>{if(s.statusCode!==200&&!(o>0&&s.statusCode===206)){if(f.close(()=>{}),o>0&&s.statusCode===200){try{l.unlinkSync(t)}catch{}let h=Math.min(2e3*e,1e4);s.resume();try{d.destroy(new Error("restart:range-ignored"))}catch{}return $(h).then(()=>w(v(a,t,p,e+1,y,0,S)))}if(l.unlink(t,()=>{}),s.statusCode&&[429,500,502,503,504].includes(s.statusCode)&&e<5){let h=Math.min(2e3*e,1e4);return s.resume(),$(h).then(()=>w(v(a,t,p,e+1,y,o,S)))}k(new Error(`HTTP ${s.statusCode} for ${a}`)),s.resume();return}let E=Number(s.headers["content-length"]||0),g=S>0?S:o>0?o+E:E,u=0,r=Date.now(),n=e<=2?6e4:9e4,i=setInterval(()=>{if(!y?.cancelled&&Date.now()-r>n)try{let h=new Error("stalled");h.code="ETIMEDOUT",d.destroy(h)}catch{}},1e4);s.on("data",h=>{u+=h.length,r=Date.now(),p&&p(Math.min(o+u,g||o+u),g||0)}),s.on("aborted",async()=>{let h=new Promise(c=>f.close(()=>c()));try{clearInterval(i)}catch{}try{await h}catch{}if(e<5){let c=Math.min(2e3*e,1e4);return $(c).then(()=>w(v(a,t,p,e+1,y,o+u,S)))}k(new Error("response aborted"))}),V(s,f).then(()=>{try{clearInterval(i)}catch{}w()}).catch(h=>{try{clearInterval(i)}catch{}k(h)})});if(y?.requests.add(d),d.on("socket",s=>{try{s.setKeepAlive(!0,6e4),s.setNoDelay(!0)}catch{}}),d.on("close",()=>y?.requests.delete(d)),d.setTimeout(45e3,()=>{try{let s=new Error("Request timeout");s.code="ETIMEDOUT",d.destroy(s)}catch{}}),y?.cancelled)try{d.destroy(new Error("cancelled"))}catch{}d.on("error",async s=>{let E=s?.code,g=e<5&&E&&X.has(String(E)),u=new Promise(r=>{try{f.close(()=>r())}catch{r()}});try{await u}catch{}if(g){let r=Math.min(2e3*e,1e4),n=o;try{n=l.statSync(t).size}catch{}return $(r).then(()=>w(v(a,t,p,e+1,y,n,S)))}k(s)})})}async function Z(a,t,p){try{let e=l.statSync(a);return p&&Number(p)>0&&e.size!==Number(p)?!1:(await H(a)).toLowerCase()===String(t).toLowerCase()}catch{return!1}}async function ct(a){let t=`${a.replace(/\/$/,"")}/checksums.json`;return Q(t)}async function F(a,t,p,e,y=4,o){let S=b(t.path).split("/").join(z.sep),w=z.join(p,S);if(_(z.dirname(w)),await Z(w,t.checksum,t.size)){e("progress:skip",{path:t.path});return}if(o?.cancelled)throw new Error("cancelled");if(Array.isArray(t.parts)&&t.parts.length>0){let f=t.parts.length,m=new Array(f),d=0,s=new Set;async function E(){for(;;){let r=d++;if(r>=f)return;if(s.has(r))continue;s.add(r);let n=t.parts[r],i=b(n.path),h=`${a.replace(/\/$/,"")}/${i}`,c=`${w}.part${r}`;try{if(l.existsSync(c))if((await H(c)).toLowerCase()===String(n.checksum).toLowerCase()){e("progress:part",{path:t.path,part:r,totalParts:f,received:Number(n.size||0),total:Number(n.size||0)}),m[r]=c;continue}else try{l.unlinkSync(c)}catch{}}catch{}let C=0;for(;;){if(o?.cancelled)throw new Error("cancelled");C+=1;let P=0,T=0;try{let A=0;try{A=l.statSync(c).size}catch{}let x=Number(n.size||0);if(x>0&&A>x)try{l.unlinkSync(c),A=0}catch{}await v(h,c,(M,L)=>{let R=Math.max(0,M-T);T=M;try{R>0&&e("progress:bytes",{delta:R})}catch{}P+=R;let U=x||L||0;e("progress:part",{path:t.path,part:r,totalParts:f,received:Math.min(M,U||M),total:U})},1,o,A,x)}catch{try{l.unlinkSync(c)}catch{}try{P>0&&e("progress:bytes",{delta:-P})}catch{}try{e("progress:part:reset",{path:t.path,part:r,totalParts:f})}catch{}let x=Math.min(2e3*C,1e4);await $(x);continue}if((await H(c)).toLowerCase()===String(n.checksum).toLowerCase())break;try{l.unlinkSync(c)}catch{}try{P>0&&e("progress:bytes",{delta:-P})}catch{}try{e("progress:part:reset",{path:t.path,part:r,totalParts:f})}catch{}let q=Math.min(2e3*C,1e4);await $(q)}m[r]=c}}let g=Array.from({length:Math.max(1,y)},()=>E());await Promise.all(g),e("progress:merge:start",{path:t.path,parts:m.length});let u=l.createWriteStream(w);for(let r=0;r<m.length;r++){let n=m[r];e("progress:merge:part",{path:t.path,part:r,totalParts:m.length}),await new Promise((i,h)=>{let c=l.createReadStream(n);c.on("error",h),u.on("error",h),c.on("end",()=>{try{l.unlinkSync(n)}catch{}i()}),c.pipe(u,{end:!1})})}await new Promise((r,n)=>{u.on("error",n),u.on("finish",r),u.end()});try{e("progress:merge:done",{path:t.path})}catch{}}else{let f=b(t.path),m=`${a.replace(/\/$/,"")}/${f}`,d=0;for(;;){d+=1;let s=0,E=0,g=`${w}.download`,u=0;try{u=l.statSync(g).size}catch{}let r=Number(t.size||0);if(r>0&&u>r)try{l.unlinkSync(g),u=0}catch{}if(await v(m,g,(i,h)=>{let c=Math.max(0,i-E);E=i;try{c>0&&e("progress:bytes",{delta:c})}catch{}s+=c;let C=r||h||0;e("progress:file",{path:t.path,received:Math.min(i,C||i),total:C})},1,o,u,r),(await H(g)).toLowerCase()===String(t.checksum).toLowerCase())break;try{l.unlinkSync(g)}catch{}try{s>0&&e("progress:bytes",{delta:-s})}catch{}if(d>=2)throw new Error(`Checksum mismatch for ${t.path}`)}try{l.unlinkSync(w)}catch{}l.renameSync(`${w}.download`,w)}if(e("progress:verify",{path:t.path}),(await H(w)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`)}async function ot(a,t,p,e,y=!1,o=4,S=4,w){let k=new Set,f=[];for(let n of t.files||[]){if(!(y||!n.optional))continue;let i=W(n.path);i&&(k.has(i)||(k.add(i),f.push(n)))}let m=f.filter(n=>!(Array.isArray(n.parts)&&n.parts.length>0)),d=f.filter(n=>Array.isArray(n.parts)&&n.parts.length>0),s=m.concat(d),E=s.length,g=0,u=s.reduce((n,i)=>{let h=Number(i.size||0);return h>0?n+h:Array.isArray(i.parts)&&i.parts.length?n+i.parts.reduce((c,C)=>c+Number(C.size||0),0):n},0);try{e("progress:bytes:total",{totalBytes:u})}catch{}async function r(n,i,h){let c=0;async function C(){for(;;){let T=c++;if(T>=n.length)return;let N=n[T],q=i+T,A=W(N.path),x=async()=>F(a,N,p,e,S,w),M=!1,L=I.get(A);L?M=!0:(e("progress:start",{index:q,total:E,path:N.path,completed:g}),L=(async()=>{try{await x()}catch(R){if(String(R?.message||R||"error").includes("cancelled"))throw R;try{let D=z.join(p,N.path.replace(/\\/g,z.sep));try{l.unlinkSync(D)}catch{}await x()}catch(D){try{e("progress:error",{path:N.path,message:String(D?.message||D)})}catch{}}}})(),I.set(A,L));try{await L}finally{M||I.delete(A)}g+=1,e("progress:done",{index:q,total:E,path:N.path,completed:g}),await $(10)}}let P=Array.from({length:Math.max(1,h)},()=>C());await Promise.all(P)}if(await r(m,0,Math.max(1,o)),I.size>0)try{await Promise.all([...I.values()])}catch{}await r(d,m.length,1)}export{st as cancelToken,nt as createCancelToken,ot as downloadAll,F as downloadFileObject,ct as fetchChecksums};
