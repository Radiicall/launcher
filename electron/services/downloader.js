import o from"node:fs";import y from"node:path";import et from"node:crypto";import{pipeline as rt}from"node:stream";import{promisify as at}from"node:util";import K from"node:https";var nt=at(rt);function G(c){return String(c||"").replace(/\\/g,"/").replace(/^\/+/,"")}function F(c){return String(c||"").replace(/\\/g,"/").toLowerCase()}var U=new Map,O=new K.Agent({keepAlive:!0,maxSockets:64,maxFreeSockets:32,keepAliveMsecs:6e4,scheduling:"fifo"});function q(c){return new Promise((t,l)=>{let e=et.createHash("sha256"),h=o.createReadStream(c);h.on("error",l),h.on("end",()=>t(e.digest("hex"))),h.on("data",p=>e.update(p))})}function j(c){o.mkdirSync(c,{recursive:!0})}function st(c){return new Promise((t,l)=>{let e=K.get(c,{agent:O},h=>{if(h.statusCode!==200){l(new Error(`HTTP ${h.statusCode} for ${c}`)),h.resume();return}let p="";h.setEncoding("utf8"),h.on("data",C=>p+=C),h.on("end",()=>{try{t(JSON.parse(p))}catch(C){l(C)}})});e.on("error",l),e.setTimeout(3e4,()=>{e.destroy(),l(new Error("JSON fetch timeout"))})})}function R(c){return new Promise(t=>setTimeout(t,c))}function dt(){return{cancelled:!1,requests:new Set}}function gt(c){if(c){c.cancelled=!0;for(let t of c.requests)try{t.destroy(new Error("cancelled"))}catch{}c.requests.clear()}}var ct=new Set(["ECONNRESET","ETIMEDOUT","EAI_AGAIN","ECONNABORTED","ENETRESET","EHOSTUNREACH","ENETUNREACH","EPIPE","ENOTFOUND","ECONNREFUSED","EHOSTDOWN","ENETDOWN"]);async function B(c,t,l,e=1,h,p=0,C=0){return new Promise((i,T)=>{j(y.dirname(t));let S=o.createWriteStream(t,{flags:p>0?"a":"w"});if(h?.cancelled)return S.close(()=>{}),T(new Error("cancelled"));let A={agent:O};p>0&&(A.headers={Range:`bytes=${p}-`});let d=K.get(c,A,s=>{if(s.statusCode!==200&&!(p>0&&s.statusCode===206)){if(S.close(()=>{}),p>0&&s.statusCode===200){try{o.unlinkSync(t)}catch{}let r=Math.min(2e3*e,1e4);s.resume();try{d.destroy(new Error("restart:range-ignored"))}catch{}return R(r).then(()=>i(B(c,t,l,e+1,h,0,C)))}if(o.unlink(t,()=>{}),s.statusCode&&[429,500,502,503,504].includes(s.statusCode)&&e<5){let r=Math.min(2e3*e,1e4);return s.resume(),R(r).then(()=>i(B(c,t,l,e+1,h,p,C)))}T(new Error(`HTTP ${s.statusCode} for ${c}`)),s.resume();return}let k=Number(s.headers["content-length"]||0),g=C>0?C:p>0?p+k:k,a=0,f=Date.now(),w=e<=2?3e4:45e3,n=setInterval(()=>{if(!h?.cancelled&&Date.now()-f>w)try{let r=new Error("stalled");r.code="ETIMEDOUT",d.destroy(r)}catch{}},1e4);s.on("data",r=>{a+=r.length,f=Date.now(),l&&l(Math.min(p+a,g||p+a),g||0)}),s.on("aborted",async()=>{let r=new Promise(u=>S.close(()=>u()));try{clearInterval(n)}catch{}try{await r}catch{}if(e<5){let u=Math.min(2e3*e,1e4);return R(u).then(()=>i(B(c,t,l,e+1,h,p+a,C)))}T(new Error("response aborted"))}),nt(s,S).then(()=>{try{clearInterval(n)}catch{}i()}).catch(r=>{try{clearInterval(n)}catch{}T(r)})});if(h?.requests.add(d),d.on("socket",s=>{try{s.setKeepAlive(!0,6e4),s.setNoDelay(!0),s.setRecvBufferSize&&s.setRecvBufferSize(64*1024),s.setSendBufferSize&&s.setSendBufferSize(64*1024)}catch{}}),d.on("close",()=>h?.requests.delete(d)),d.setTimeout(9e4,()=>{try{let s=new Error("Request timeout");s.code="ETIMEDOUT",d.destroy(s)}catch{}}),h?.cancelled)try{d.destroy(new Error("cancelled"))}catch{}d.on("error",async s=>{let k=s?.code,g=e<8&&k&&ct.has(String(k)),a=new Promise(f=>{try{S.close(()=>f())}catch{f()}});try{await a}catch{}if(g){let f=Math.min(1e3*Math.pow(1.5,e),15e3),w=Math.random()*1e3,n=f+w,r=p;try{r=o.statSync(t).size}catch{}return R(n).then(()=>i(B(c,t,l,e+1,h,r,C)))}T(s)})})}async function ot(c,t,l){try{let e=o.statSync(c);return l&&Number(l)>0&&e.size!==Number(l)?!1:(await q(c)).toLowerCase()===String(t).toLowerCase()}catch{return!1}}async function wt(c){let t=`${c.replace(/\/$/,"")}/checksums.json`;return st(t)}async function it(c,t,l,e,h=4,p){let C=G(t.path).split("/").join(y.sep),i=y.join(l,C);if(j(y.dirname(i)),await ot(i,t.checksum,t.size))return e("progress:skip",{path:t.path}),{downloadComplete:!0,verificationComplete:!0,targetPath:i};if(p?.cancelled)throw new Error("cancelled");if(Array.isArray(t.parts)&&t.parts.length>0){let S=t.parts.length,A=new Array(S),d=0,s=new Set;async function k(){for(;;){let a=d++;if(a>=S)return;if(s.has(a))continue;s.add(a);let f=t.parts[a],w=G(f.path),n=`${c.replace(/\/$/,"")}/${w}`,r=`${i}.part${a}`;try{if(o.existsSync(r))if((await q(r)).toLowerCase()===String(f.checksum).toLowerCase()){e("progress:part",{path:t.path,part:a,totalParts:S,received:Number(f.size||0),total:Number(f.size||0)}),A[a]=r;continue}else try{o.unlinkSync(r)}catch{}}catch{}let u=0;for(;;){if(p?.cancelled)throw new Error("cancelled");u+=1;let m=0,H=0;try{let z=0;try{z=o.statSync(r).size}catch{}let x=Number(f.size||0);if(x>0&&z>x)try{o.unlinkSync(r),z=0}catch{}await B(n,r,(E,v)=>{let D=Math.max(0,E-H);H=E;try{D>0&&e("progress:bytes",{delta:D})}catch{}m+=D;let I=x||v||0;e("progress:part",{path:t.path,part:a,totalParts:S,received:Math.min(E,I||E),total:I})},1,p,z,x)}catch{try{o.unlinkSync(r)}catch{}try{m>0&&e("progress:bytes",{delta:-m})}catch{}try{e("progress:part:reset",{path:t.path,part:a,totalParts:S})}catch{}let x=Math.min(2e3*u,1e4);await R(x);continue}if((await q(r)).toLowerCase()===String(f.checksum).toLowerCase())break;try{o.unlinkSync(r)}catch{}try{m>0&&e("progress:bytes",{delta:-m})}catch{}try{e("progress:part:reset",{path:t.path,part:a,totalParts:S})}catch{}let _=Math.min(2e3*u,1e4);await R(_)}A[a]=r}}let g=Array.from({length:Math.max(1,h)},()=>k());return await Promise.all(g),{downloadComplete:!0,verificationComplete:!1,targetPath:i,mergeAndVerifyAsync:async()=>{e("progress:merge:start",{path:t.path,parts:A.length});let a=o.createWriteStream(i);for(let w=0;w<A.length;w++){let n=A[w];e("progress:merge:part",{path:t.path,part:w,totalParts:A.length}),await new Promise((r,u)=>{let m=o.createReadStream(n);m.on("error",u),a.on("error",u),m.on("end",()=>{try{o.unlinkSync(n)}catch{}r()}),m.pipe(a,{end:!1})})}await new Promise((w,n)=>{a.on("error",n),a.on("finish",w),a.end()});try{e("progress:merge:done",{path:t.path})}catch{}if(e("progress:verify",{path:t.path}),(await q(i)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`);try{let w=o.readdirSync(y.dirname(i)),n=y.basename(i);w.forEach(r=>{if(r.startsWith(n+".part"))try{o.unlinkSync(y.join(y.dirname(i),r))}catch{}})}catch{}return{verificationComplete:!0,targetPath:i,filePath:t.path}}}}else{let S=G(t.path),A=`${c.replace(/\/$/,"")}/${S}`,d=0;for(;;){d+=1;let s=0,k=0,g=`${i}.download`,a=0;try{a=o.statSync(g).size}catch{}let f=Number(t.size||0);if(f>0&&a>f)try{o.unlinkSync(g),a=0}catch{}if(await B(A,g,(n,r)=>{let u=Math.max(0,n-k);k=n;try{u>0&&e("progress:bytes",{delta:u})}catch{}s+=u;let m=f||r||0;e("progress:file",{path:t.path,received:Math.min(n,m||n),total:m})},1,p,a,f),(await q(g)).toLowerCase()===String(t.checksum).toLowerCase())break;try{o.unlinkSync(g)}catch{}try{s>0&&e("progress:bytes",{delta:-s})}catch{}if(d>=2)throw new Error(`Checksum mismatch for ${t.path}`)}try{o.unlinkSync(i)}catch{}o.renameSync(`${i}.download`,i)}if(e("progress:verify",{path:t.path}),(await q(i)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`);return{downloadComplete:!0,verificationComplete:!0,targetPath:i}}async function mt(c,t,l,e,h=!1,p=4,C=4,i,T){let S=new Set,A=[];for(let n of t.files||[]){if(!(h||!n.optional))continue;let r=F(n.path);r&&(S.has(r)||(S.add(r),A.push(n)))}let d=A.filter(n=>!(Array.isArray(n.parts)&&n.parts.length>0)),s=A.filter(n=>Array.isArray(n.parts)&&n.parts.length>0),k=d.concat(s),g=k.length,a=0,f=k.reduce((n,r)=>{let u=Number(r.size||0);return u>0?n+u:Array.isArray(r.parts)&&r.parts.length?n+r.parts.reduce((m,H)=>m+Number(H.size||0),0):n},0);try{e("progress:bytes:total",{totalBytes:f})}catch{}async function w(n,r,u,m=!1){let H=0,V=[];async function _(){for(;;){for(;T&&T();)if(await R(100),i?.cancelled)return;let x=H++;if(x>=n.length)return;let E=n[x],v=r+x,D=F(E.path),I=async()=>it(c,E,l,e,C,i),Y=!1,W=U.get(D);W?Y=!0:(e("progress:start",{index:v,total:g,path:E.path,completed:a}),W=(async()=>{try{let L=await I();if(m&&L?.mergeAndVerifyAsync){let X=L.mergeAndVerifyAsync().then(P=>(P?.filePath&&(a+=1,e("progress:done",{index:v,total:g,path:P.filePath,completed:a})),P)).catch(P=>{if(String(P?.message||P||"error").includes("cancelled"))throw P;try{let M=y.join(l,E.path.replace(/\\/g,y.sep));try{o.unlinkSync(M)}catch{}try{let N=o.readdirSync(y.dirname(M)),$=y.basename(M);N.forEach(J=>{if(J.startsWith($+".part"))try{o.unlinkSync(y.join(y.dirname(M),J))}catch{}})}catch{}return I().then(N=>N.mergeAndVerifyAsync?N.mergeAndVerifyAsync().then($=>($?.filePath&&(a+=1,e("progress:done",{index:v,total:g,path:$.filePath,completed:a})),$)):N)}catch(M){try{e("progress:error",{path:E.path,message:String(M?.message||M)})}catch{}throw M}});return V.push(X),{...L,skipProgressDone:!0}}return L}catch(L){if(String(L?.message||L||"error").includes("cancelled"))throw L;try{let P=y.join(l,E.path.replace(/\\/g,y.sep));try{o.unlinkSync(P)}catch{}let b=await I();if(m&&b?.mergeAndVerifyAsync){let M=b.mergeAndVerifyAsync().then(N=>(N?.filePath&&(a+=1,e("progress:done",{index:v,total:g,path:N.filePath,completed:a})),N)).catch(N=>{try{let $=y.join(l,E.path.replace(/\\/g,y.sep)),J=o.readdirSync(y.dirname($)),tt=y.basename($);J.forEach(Z=>{if(Z.startsWith(tt+".part"))try{o.unlinkSync(y.join(y.dirname($),Z))}catch{}})}catch{}try{e("progress:error",{path:E.path,message:String(N?.message||N)})}catch{}throw N});return V.push(M),{...b,skipProgressDone:!0}}return b}catch(P){try{e("progress:error",{path:E.path,message:String(P?.message||P)})}catch{}throw P}}})(),U.set(D,W));let Q;try{Q=await W}finally{Y||U.delete(D)}Q?.skipProgressDone||(a+=1,e("progress:done",{index:v,total:g,path:E.path,completed:a})),await R(10)}}let z=Array.from({length:Math.max(1,u)},()=>_());await Promise.all(z),V.length>0&&await Promise.all(V)}if(await w(d,0,Math.max(1,p)),U.size>0)try{await Promise.all([...U.values()])}catch{}await w(s,d.length,1,!0)}export{gt as cancelToken,dt as createCancelToken,mt as downloadAll,it as downloadFileObject,wt as fetchChecksums};
