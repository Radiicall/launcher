import y from"node:fs";import R from"node:path";import W from"node:crypto";import{pipeline as _}from"node:stream";import{promisify as G}from"node:util";import D from"node:https";var J=G(_);function b(n){return String(n||"").replace(/\\/g,"/").toLowerCase()}var v=new Map,K=new D.Agent({keepAlive:!0,maxSockets:32,maxFreeSockets:16,keepAliveMsecs:3e4});function z(n){return new Promise((t,l)=>{let e=W.createHash("sha256"),p=y.createReadStream(n);p.on("error",l),p.on("end",()=>t(e.digest("hex"))),p.on("data",o=>e.update(o))})}function B(n){y.mkdirSync(n,{recursive:!0})}function V(n){return new Promise((t,l)=>{D.get(n,e=>{if(e.statusCode!==200){l(new Error(`HTTP ${e.statusCode} for ${n}`)),e.resume();return}let p="";e.setEncoding("utf8"),e.on("data",o=>p+=o),e.on("end",()=>{try{t(JSON.parse(p))}catch(o){l(o)}})}).on("error",l)})}function N(n){return new Promise(t=>setTimeout(t,n))}function rt(){return{cancelled:!1,requests:new Set}}function nt(n){if(n){n.cancelled=!0;for(let t of n.requests)try{t.destroy(new Error("cancelled"))}catch{}n.requests.clear()}}var Y=new Set(["ECONNRESET","ETIMEDOUT","EAI_AGAIN","ECONNABORTED","ENETRESET","EHOSTUNREACH","ENETUNREACH","EPIPE"]);async function $(n,t,l,e=1,p,o=0,u=0){return new Promise((x,w)=>{B(R.dirname(t));let f=y.createWriteStream(t,{flags:o>0?"a":"w"});if(p?.cancelled)return f.close(()=>{}),w(new Error("cancelled"));let S={agent:K};o>0&&(S.headers={Range:`bytes=${o}-`});let d=D.get(n,S,s=>{if(s.statusCode!==200&&!(o>0&&s.statusCode===206)){if(f.close(()=>{}),o>0&&s.statusCode===200){try{y.unlinkSync(t)}catch{}let i=Math.min(2e3*e,1e4);s.resume();try{d.destroy(new Error("restart:range-ignored"))}catch{}return N(i).then(()=>x($(n,t,l,e+1,p,0,u)))}if(y.unlink(t,()=>{}),s.statusCode&&[429,500,502,503,504].includes(s.statusCode)&&e<5){let i=Math.min(2e3*e,1e4);return s.resume(),N(i).then(()=>x($(n,t,l,e+1,p,o,u)))}w(new Error(`HTTP ${s.statusCode} for ${n}`)),s.resume();return}let g=Number(s.headers["content-length"]||0),m=u>0?u:o>0?o+g:g,a=0,h=Date.now(),c=e<=2?6e4:9e4,r=setInterval(()=>{if(!p?.cancelled&&Date.now()-h>c)try{let i=new Error("stalled");i.code="ETIMEDOUT",d.destroy(i)}catch{}},1e4);s.on("data",i=>{a+=i.length,h=Date.now(),l&&l(Math.min(o+a,m||o+a),m||0)}),s.on("aborted",async()=>{let i=new Promise(E=>f.close(()=>E()));try{clearInterval(r)}catch{}try{await i}catch{}if(e<5){let E=Math.min(2e3*e,1e4);return N(E).then(()=>x($(n,t,l,e+1,p,o+a,u)))}w(new Error("response aborted"))}),J(s,f).then(()=>{try{clearInterval(r)}catch{}x()}).catch(i=>{try{clearInterval(r)}catch{}w(i)})});if(p?.requests.add(d),d.on("socket",s=>{try{s.setKeepAlive(!0,6e4),s.setNoDelay(!0)}catch{}}),d.on("close",()=>p?.requests.delete(d)),d.setTimeout(45e3,()=>{try{let s=new Error("Request timeout");s.code="ETIMEDOUT",d.destroy(s)}catch{}}),p?.cancelled)try{d.destroy(new Error("cancelled"))}catch{}d.on("error",async s=>{let g=s?.code,m=e<5&&g&&Y.has(String(g)),a=new Promise(h=>{try{f.close(()=>h())}catch{h()}});try{await a}catch{}if(m){let h=Math.min(2e3*e,1e4),c=o;try{c=y.statSync(t).size}catch{}return N(h).then(()=>x($(n,t,l,e+1,p,c,u)))}w(s)})})}async function Q(n,t,l){try{let e=y.statSync(n);return l&&Number(l)>0&&e.size!==Number(l)?!1:(await z(n)).toLowerCase()===String(t).toLowerCase()}catch{return!1}}async function st(n){let t=`${n.replace(/\/$/,"")}/checksums.json`;return V(t)}async function X(n,t,l,e,p=4,o){let u=R.join(l,t.path.replace(/\\/g,R.sep));if(B(R.dirname(u)),await Q(u,t.checksum,t.size)){e("progress:skip",{path:t.path});return}if(o?.cancelled)throw new Error("cancelled");if(Array.isArray(t.parts)&&t.parts.length>0){let w=t.parts.length,f=new Array(w),S=0,d=new Set;async function s(){for(;;){let a=S++;if(a>=w)return;if(d.has(a))continue;d.add(a);let h=t.parts[a],c=`${n.replace(/\/$/,"")}/${h.path.replace(/\\/g,"/")}`,r=`${u}.part${a}`;try{if(y.existsSync(r))if((await z(r)).toLowerCase()===String(h.checksum).toLowerCase()){e("progress:part",{path:t.path,part:a,totalParts:w,received:Number(h.size||0),total:Number(h.size||0)}),f[a]=r;continue}else try{y.unlinkSync(r)}catch{}}catch{}let i=0;for(;;){if(o?.cancelled)throw new Error("cancelled");i+=1;let E=0,P=0;try{let C=0;try{C=y.statSync(r).size}catch{}let k=Number(h.size||0);if(k>0&&C>k)try{y.unlinkSync(r),C=0}catch{}await $(c,r,(A,I)=>{let T=Math.max(0,A-P);P=A;try{T>0&&e("progress:bytes",{delta:T})}catch{}E+=T;let M=k||I||0;e("progress:part",{path:t.path,part:a,totalParts:w,received:Math.min(A,M||A),total:M})},1,o,C,k)}catch{try{y.unlinkSync(r)}catch{}try{E>0&&e("progress:bytes",{delta:-E})}catch{}try{e("progress:part:reset",{path:t.path,part:a,totalParts:w})}catch{}let k=Math.min(2e3*i,1e4);await N(k);continue}if((await z(r)).toLowerCase()===String(h.checksum).toLowerCase())break;try{y.unlinkSync(r)}catch{}try{E>0&&e("progress:bytes",{delta:-E})}catch{}try{e("progress:part:reset",{path:t.path,part:a,totalParts:w})}catch{}let L=Math.min(2e3*i,1e4);await N(L)}f[a]=r}}let g=Array.from({length:Math.max(1,p)},()=>s());await Promise.all(g),e("progress:merge:start",{path:t.path,parts:f.length});let m=y.createWriteStream(u);for(let a=0;a<f.length;a++){let h=f[a];e("progress:merge:part",{path:t.path,part:a,totalParts:f.length}),await new Promise((c,r)=>{let i=y.createReadStream(h);i.on("error",r),m.on("error",r),i.on("end",()=>{try{y.unlinkSync(h)}catch{}c()}),i.pipe(m,{end:!1})})}await new Promise((a,h)=>{m.on("error",h),m.on("finish",a),m.end()});try{e("progress:merge:done",{path:t.path})}catch{}}else{let w=`${n.replace(/\/$/,"")}/${t.path.replace(/\\/g,"/")}`,f=0;for(;;){f+=1;let S=0,d=0,s=0;try{s=y.statSync(u).size}catch{}let g=Number(t.size||0);if(g>0&&s>g)try{y.unlinkSync(u),s=0}catch{}if(await $(w,u,(a,h)=>{let c=Math.max(0,a-d);d=a;try{c>0&&e("progress:bytes",{delta:c})}catch{}S+=c;let r=g||h||0;e("progress:file",{path:t.path,received:Math.min(a,r||a),total:r})},1,o,s,g),(await z(u)).toLowerCase()===String(t.checksum).toLowerCase())break;try{y.unlinkSync(u)}catch{}try{S>0&&e("progress:bytes",{delta:-S})}catch{}if(f>=2)throw new Error(`Checksum mismatch for ${t.path}`)}}if(e("progress:verify",{path:t.path}),(await z(u)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`)}async function ct(n,t,l,e,p=!1,o=4,u=4,x){let w=new Set,f=[];for(let c of t.files||[]){if(!(p||!c.optional))continue;let r=b(c.path);r&&(w.has(r)||(w.add(r),f.push(c)))}let S=f.filter(c=>!(Array.isArray(c.parts)&&c.parts.length>0)),d=f.filter(c=>Array.isArray(c.parts)&&c.parts.length>0),s=S.concat(d),g=s.length,m=0,a=s.reduce((c,r)=>{let i=Number(r.size||0);return i>0?c+i:Array.isArray(r.parts)&&r.parts.length?c+r.parts.reduce((E,P)=>E+Number(P.size||0),0):c},0);try{e("progress:bytes:total",{totalBytes:a})}catch{}async function h(c,r,i){let E=0;async function P(){for(;;){let L=E++;if(L>=c.length)return;let C=c[L],k=r+L,A=b(C.path),I=async()=>X(n,C,l,e,u,x),T=!1,M=v.get(A);M?T=!0:(e("progress:start",{index:k,total:g,path:C.path,completed:m}),M=(async()=>{try{await I()}catch(q){if(String(q?.message||q||"error").includes("cancelled"))throw q;try{let H=R.join(l,C.path.replace(/\\/g,R.sep));try{y.unlinkSync(H)}catch{}await I()}catch(H){try{e("progress:error",{path:C.path,message:String(H?.message||H)})}catch{}}}})(),v.set(A,M));try{await M}finally{T||v.delete(A)}m+=1,e("progress:done",{index:k,total:g,path:C.path,completed:m}),await N(10)}}let U=Array.from({length:Math.max(1,i)},()=>P());await Promise.all(U)}if(await h(S,0,Math.max(1,o)),v.size>0)try{await Promise.all([...v.values()])}catch{}await h(d,S.length,1)}export{nt as cancelToken,rt as createCancelToken,ct as downloadAll,X as downloadFileObject,st as fetchChecksums};
