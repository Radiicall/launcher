import kt from"node:path";import Nt from"node:fs";import h from"node:fs";import u from"node:path";import ut from"node:crypto";import{pipeline as dt}from"node:stream";import{promisify as yt}from"node:util";import Y from"node:https";var gt=yt(dt);function F(r){return String(r||"").replace(/\\/g,"/").replace(/^\/+/,"")}function et(r){return String(r||"").replace(/\\/g,"/").toLowerCase()}var W=new Map,rt=new Y.Agent({keepAlive:!0,maxSockets:64,maxFreeSockets:32,keepAliveMsecs:6e4,scheduling:"fifo"});function B(r){return new Promise((t,i)=>{let e=ut.createHash("sha256"),c=h.createReadStream(r);c.on("error",i),c.on("end",()=>t(e.digest("hex"))),c.on("data",l=>e.update(l))})}function nt(r){h.mkdirSync(r,{recursive:!0})}function wt(r){return new Promise((t,i)=>{let e=Y.get(r,{agent:rt},c=>{if(c.statusCode!==200){i(new Error(`HTTP ${c.statusCode} for ${r}`)),c.resume();return}let l="";c.setEncoding("utf8"),c.on("data",A=>l+=A),c.on("end",()=>{try{t(JSON.parse(l))}catch(A){i(A)}})});e.on("error",i),e.setTimeout(3e4,()=>{e.destroy(),i(new Error("JSON fetch timeout"))})})}function D(r){return new Promise(t=>setTimeout(t,r))}function at(){return{cancelled:!1,requests:new Set}}function Q(r){if(r){r.cancelled=!0;for(let t of r.requests)try{t.destroy(new Error("cancelled"))}catch{}r.requests.clear()}}var mt=new Set(["ECONNRESET","ETIMEDOUT","EAI_AGAIN","ECONNABORTED","ENETRESET","EHOSTUNREACH","ENETUNREACH","EPIPE","ENOTFOUND","ECONNREFUSED","EHOSTDOWN","ENETDOWN"]);async function V(r,t,i,e=1,c,l=0,A=0){return new Promise((p,x)=>{nt(u.dirname(t));let g=h.createWriteStream(t,{flags:l>0?"a":"w"});if(c?.cancelled)return g.close(()=>{}),x(new Error("cancelled"));let E={agent:rt};l>0&&(E.headers={Range:`bytes=${l}-`});let d=Y.get(r,E,a=>{if(a.statusCode!==200&&!(l>0&&a.statusCode===206)){if(g.close(()=>{}),l>0&&a.statusCode===200){try{h.unlinkSync(t)}catch{}let n=Math.min(2e3*e,1e4);a.resume();try{d.destroy(new Error("restart:range-ignored"))}catch{}return D(n).then(()=>p(V(r,t,i,e+1,c,0,A)))}if(h.unlink(t,()=>{}),a.statusCode&&[429,500,502,503,504].includes(a.statusCode)&&e<5){let n=Math.min(2e3*e,1e4);return a.resume(),D(n).then(()=>p(V(r,t,i,e+1,c,l,A)))}x(new Error(`HTTP ${a.statusCode} for ${r}`)),a.resume();return}let C=Number(a.headers["content-length"]||0),w=A>0?A:l>0?l+C:C,s=0,f=Date.now(),m=e<=2?3e4:45e3,o=setInterval(()=>{if(!c?.cancelled&&Date.now()-f>m)try{let n=new Error("stalled");n.code="ETIMEDOUT",d.destroy(n)}catch{}},1e4);a.on("data",n=>{s+=n.length,f=Date.now(),i&&i(Math.min(l+s,w||l+s),w||0)}),a.on("aborted",async()=>{let n=new Promise(y=>g.close(()=>y()));try{clearInterval(o)}catch{}try{await n}catch{}if(e<5){let y=Math.min(2e3*e,1e4);return D(y).then(()=>p(V(r,t,i,e+1,c,l+s,A)))}x(new Error("response aborted"))}),gt(a,g).then(()=>{try{clearInterval(o)}catch{}p()}).catch(n=>{try{clearInterval(o)}catch{}x(n)})});if(c?.requests.add(d),d.on("socket",a=>{try{a.setKeepAlive(!0,6e4),a.setNoDelay(!0),a.setRecvBufferSize&&a.setRecvBufferSize(64*1024),a.setSendBufferSize&&a.setSendBufferSize(64*1024)}catch{}}),d.on("close",()=>c?.requests.delete(d)),d.setTimeout(9e4,()=>{try{let a=new Error("Request timeout");a.code="ETIMEDOUT",d.destroy(a)}catch{}}),c?.cancelled)try{d.destroy(new Error("cancelled"))}catch{}d.on("error",async a=>{let C=a?.code,w=e<8&&C&&mt.has(String(C)),s=new Promise(f=>{try{g.close(()=>f())}catch{f()}});try{await s}catch{}if(w){let f=Math.min(1e3*Math.pow(1.5,e),15e3),m=Math.random()*1e3,o=f+m,n=l;try{n=h.statSync(t).size}catch{}return D(o).then(()=>p(V(r,t,i,e+1,c,n,A)))}x(a)})})}async function St(r,t,i){try{let e=h.statSync(r);return i&&Number(i)>0&&e.size!==Number(i)?!1:(await B(r)).toLowerCase()===String(t).toLowerCase()}catch{return!1}}async function st(r){let t=`${r.replace(/\/$/,"")}/checksums.json`;return wt(t)}async function Et(r,t,i,e,c=4,l){let A=F(t.path).split("/").join(u.sep),p=u.join(i,A);if(nt(u.dirname(p)),await St(p,t.checksum,t.size))return e("progress:skip",{path:t.path}),{downloadComplete:!0,verificationComplete:!0,targetPath:p};if(l?.cancelled)throw new Error("cancelled");if(Array.isArray(t.parts)&&t.parts.length>0){let g=t.parts.length,E=new Array(g),d=0,a=new Set;async function C(){for(;;){let s=d++;if(s>=g)return;if(a.has(s))continue;a.add(s);let f=t.parts[s],m=F(f.path),o=`${r.replace(/\/$/,"")}/${m}`,n=`${p}.part${s}`;try{if(h.existsSync(n))if((await B(n)).toLowerCase()===String(f.checksum).toLowerCase()){e("progress:part",{path:t.path,part:s,totalParts:g,received:Number(f.size||0),total:Number(f.size||0)}),E[s]=n;continue}else try{h.unlinkSync(n)}catch{}}catch{}let y=0;for(;;){if(l?.cancelled)throw new Error("cancelled");y+=1;let S=0,H=0;try{let R=0;try{R=h.statSync(n).size}catch{}let T=Number(f.size||0);if(T>0&&R>T)try{h.unlinkSync(n),R=0}catch{}await V(o,n,(P,z)=>{let M=Math.max(0,P-H);H=P;try{M>0&&e("progress:bytes",{delta:M})}catch{}S+=M;let b=T||z||0;e("progress:part",{path:t.path,part:s,totalParts:g,received:Math.min(P,b||P),total:b})},1,l,R,T)}catch{try{h.unlinkSync(n)}catch{}try{S>0&&e("progress:bytes",{delta:-S})}catch{}try{e("progress:part:reset",{path:t.path,part:s,totalParts:g})}catch{}let T=Math.min(2e3*y,1e4);await D(T);continue}if((await B(n)).toLowerCase()===String(f.checksum).toLowerCase())break;try{h.unlinkSync(n)}catch{}try{S>0&&e("progress:bytes",{delta:-S})}catch{}try{e("progress:part:reset",{path:t.path,part:s,totalParts:g})}catch{}let K=Math.min(2e3*y,1e4);await D(K)}E[s]=n}}let w=Array.from({length:Math.max(1,c)},()=>C());return await Promise.all(w),{downloadComplete:!0,verificationComplete:!1,targetPath:p,mergeAndVerifyAsync:async()=>{e("progress:merge:start",{path:t.path,parts:E.length});let s=h.createWriteStream(p);for(let m=0;m<E.length;m++){let o=E[m];e("progress:merge:part",{path:t.path,part:m,totalParts:E.length}),await new Promise((n,y)=>{let S=h.createReadStream(o);S.on("error",y),s.on("error",y),S.on("end",()=>{try{h.unlinkSync(o)}catch{}n()}),S.pipe(s,{end:!1})})}await new Promise((m,o)=>{s.on("error",o),s.on("finish",m),s.end()});try{e("progress:merge:done",{path:t.path})}catch{}if(e("progress:verify",{path:t.path}),(await B(p)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`);try{let m=h.readdirSync(u.dirname(p)),o=u.basename(p);m.forEach(n=>{if(n.startsWith(o+".part"))try{h.unlinkSync(u.join(u.dirname(p),n))}catch{}})}catch{}return{verificationComplete:!0,targetPath:p,filePath:t.path}}}}else{let g=F(t.path),E=`${r.replace(/\/$/,"")}/${g}`,d=0;for(;;){d+=1;let a=0,C=0,w=`${p}.download`,s=0;try{s=h.statSync(w).size}catch{}let f=Number(t.size||0);if(f>0&&s>f)try{h.unlinkSync(w),s=0}catch{}if(await V(E,w,(o,n)=>{let y=Math.max(0,o-C);C=o;try{y>0&&e("progress:bytes",{delta:y})}catch{}a+=y;let S=f||n||0;e("progress:file",{path:t.path,received:Math.min(o,S||o),total:S})},1,l,s,f),(await B(w)).toLowerCase()===String(t.checksum).toLowerCase())break;try{h.unlinkSync(w)}catch{}try{a>0&&e("progress:bytes",{delta:-a})}catch{}if(d>=2)throw new Error(`Checksum mismatch for ${t.path}`)}try{h.unlinkSync(p)}catch{}h.renameSync(`${p}.download`,p)}if(e("progress:verify",{path:t.path}),(await B(p)).toLowerCase()!==String(t.checksum).toLowerCase())throw new Error(`Checksum mismatch for ${t.path}`);return{downloadComplete:!0,verificationComplete:!0,targetPath:p}}async function ot(r,t,i,e,c=!1,l=4,A=4,p,x){let g=new Set,E=[];for(let o of t.files||[]){if(!(c||!o.optional))continue;let n=et(o.path);n&&(g.has(n)||(g.add(n),E.push(o)))}let d=E.filter(o=>!(Array.isArray(o.parts)&&o.parts.length>0)),a=E.filter(o=>Array.isArray(o.parts)&&o.parts.length>0),C=d.concat(a),w=C.length,s=0,f=C.reduce((o,n)=>{let y=Number(n.size||0);return y>0?o+y:Array.isArray(n.parts)&&n.parts.length?o+n.parts.reduce((S,H)=>S+Number(H.size||0),0):o},0);try{e("progress:bytes:total",{totalBytes:f})}catch{}async function m(o,n,y,S=!1){let H=0,q=[];async function K(){for(;;){for(;x&&x();)if(await D(100),p?.cancelled)return;let T=H++;if(T>=o.length)return;let P=o[T],z=n+T,M=et(P.path),b=async()=>Et(r,P,i,e,A,p),Z=!1,_=W.get(M);_?Z=!0:(e("progress:start",{index:z,total:w,path:P.path,completed:s}),_=(async()=>{try{let L=await b();if(S&&L?.mergeAndVerifyAsync){let j=L.mergeAndVerifyAsync().then(k=>(k?.filePath&&(s+=1,e("progress:done",{index:z,total:w,path:k.filePath,completed:s})),k)).catch(k=>{if(String(k?.message||k||"error").includes("cancelled"))throw k;try{let v=u.join(i,P.path.replace(/\\/g,u.sep));try{h.unlinkSync(v)}catch{}try{let N=h.readdirSync(u.dirname(v)),$=u.basename(v);N.forEach(G=>{if(G.startsWith($+".part"))try{h.unlinkSync(u.join(u.dirname(v),G))}catch{}})}catch{}return b().then(N=>N.mergeAndVerifyAsync?N.mergeAndVerifyAsync().then($=>($?.filePath&&(s+=1,e("progress:done",{index:z,total:w,path:$.filePath,completed:s})),$)):N)}catch(v){try{e("progress:error",{path:P.path,message:String(v?.message||v)})}catch{}throw v}});return q.push(j),{...L,skipProgressDone:!0}}return L}catch(L){if(String(L?.message||L||"error").includes("cancelled"))throw L;try{let k=u.join(i,P.path.replace(/\\/g,u.sep));try{h.unlinkSync(k)}catch{}let U=await b();if(S&&U?.mergeAndVerifyAsync){let v=U.mergeAndVerifyAsync().then(N=>(N?.filePath&&(s+=1,e("progress:done",{index:z,total:w,path:N.filePath,completed:s})),N)).catch(N=>{try{let $=u.join(i,P.path.replace(/\\/g,u.sep)),G=h.readdirSync(u.dirname($)),ft=u.basename($);G.forEach(tt=>{if(tt.startsWith(ft+".part"))try{h.unlinkSync(u.join(u.dirname($),tt))}catch{}})}catch{}try{e("progress:error",{path:P.path,message:String(N?.message||N)})}catch{}throw N});return q.push(v),{...U,skipProgressDone:!0}}return U}catch(k){try{e("progress:error",{path:P.path,message:String(k?.message||k)})}catch{}throw k}}})(),W.set(M,_));let O;try{O=await _}finally{Z||W.delete(M)}O?.skipProgressDone||(s+=1,e("progress:done",{index:z,total:w,path:P.path,completed:s})),await D(10)}}let R=Array.from({length:Math.max(1,y)},()=>K());await Promise.all(R),q.length>0&&await Promise.all(q)}if(await m(d,0,Math.max(1,l)),W.size>0)try{await Promise.all([...W.values()])}catch{}await m(a,d.length,1,!0)}import X from"node:fs";import Ct from"node:path";import{app as At}from"electron";var ct=At.getPath("userData"),it=Ct.join(ct,"settings.json");function ht(){try{let r=X.readFileSync(it,"utf-8");return JSON.parse(r)}catch{return{}}}function Pt(r){X.mkdirSync(ct,{recursive:!0}),X.writeFileSync(it,JSON.stringify(r,null,2),"utf-8")}function lt(r,t=void 0){return ht()[r]??t}function pt(r,t){let i=ht();i[r]=t,Pt(i)}var I=null,J=!1;function Ut(r,t){r.handle("download:checksums",async(i,{baseUrl:e})=>st(e)),r.handle("download:all",async(i,{baseUrl:e,checksums:c,installDir:l,includeOptional:A,concurrency:p,partConcurrency:x,channelName:g,mode:E})=>{let d=(a,C)=>i.sender.send(a,C);try{if(!(String(E||"install").toLowerCase()==="install")){let C=kt.join(l,"mods","mods.vdf");if(Nt.existsSync(C)){let s=(Array.isArray(c?.files)?c.files:[]).filter(f=>{try{return String(f?.path||f?.name||"").replace(/\\/g,"/").toLowerCase()!=="mods/mods.vdf"}catch{return!0}});c={...c||{},files:s}}}}catch{}I=at(),J=!1;try{await ot(e,c,l,d,!!A,Number(p)||4,Number(x)||4,I,()=>J);try{let a=lt("channels",{})||{};a[String(g||"default")]={installDir:l,gameVersion:c?.game_version||null,gameBaseUrl:e,lastUpdatedAt:Date.now()},pt("channels",a)}catch(a){console.error("Failed to persist channel info",a)}}finally{I=null}return!0}),r.handle("download:pause",async()=>{J=!0;try{t()?.webContents.send("progress:paused",{})}catch{}return!0}),r.handle("download:resume",async()=>{J=!1;try{t()?.webContents.send("progress:resumed",{})}catch{}return!0}),r.handle("download:cancel",async()=>{try{Q(I)}catch{}I=null,J=!1;try{t()?.webContents.send("progress:cancelled",{})}catch{}return!0})}function Wt(){if(I)try{Q(I)}catch{}}export{Wt as cancelActiveDownloads,Ut as setupDownloadIPC};
